pathForSites	pixienator.html#pathForSites,Delaunator	pixienator: pathForSites(d: Delaunator; pthproc: (var Path, uint32, array[2, float]) -&gt;\n    void = (pth: var Path, pid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), sitesRadius)): Path	
pathForSite	pixienator.html#pathForSite,Delaunator,uint32	pixienator: pathForSite(d: Delaunator; pid: uint32; pthproc: (var Path, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, pid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), siteRadius)): Path	
pathForCircumcenters	pixienator.html#pathForCircumcenters,Delaunator	pixienator: pathForCircumcenters(d: Delaunator; pthproc: (var Path, uint32, array[2, float]) -&gt;\n    void = (pth: var Path, tid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), circumcentersRadius)): Path	
pathForCircumcenter	pixienator.html#pathForCircumcenter,Delaunator,uint32	pixienator: pathForCircumcenter(d: Delaunator; tid: uint32; pthproc: (var Path, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, tid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), circumcenterRadius)): Path	
pathForTriangleCentroids	pixienator.html#pathForTriangleCentroids,Delaunator	pixienator: pathForTriangleCentroids(d: Delaunator; pthproc: (var Path, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, tid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), triCentroidsRadius)): Path	
pathForTriangleCentroid	pixienator.html#pathForTriangleCentroid,Delaunator,uint32	pixienator: pathForTriangleCentroid(d: Delaunator; tid: uint32; pthproc: (var Path, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, tid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), centroidRadius)): Path	
pathForRegionCentroids	pixienator.html#pathForRegionCentroids,Delaunator	pixienator: pathForRegionCentroids(d: Delaunator; pthproc: (var Path, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, pid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), plyCentroidsRadius)): Path	
pathForRegionCentroid	pixienator.html#pathForRegionCentroid,Delaunator,uint32	pixienator: pathForRegionCentroid(d: Delaunator; pid: uint32; pthproc: (var Path, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, pid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), centroidRadius)): Path	
pathForHullSites	pixienator.html#pathForHullSites,Delaunator	pixienator: pathForHullSites(d: Delaunator; pthproc: (var Path, uint32, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, hid: uint32, pid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), hullSitesRadius)): Path	
pathForHullSite	pixienator.html#pathForHullSite,Delaunator,uint32	pixienator: pathForHullSite(d: Delaunator; hid: uint32; pthproc: (var Path, uint32, uint32,\n    array[2, float]) -&gt;\n    void = (pth: var Path, hid: uint32, pid: uint32, p: array[2, float]) =&gt;\n    pth.circle(float32(p[0]), float32(p[1]), hullSiteRadius)): Path	
pathForHalfedge	pixienator.html#pathForHalfedge,Delaunator,int32,proc (pth: var Path, eid: int32, pid: uint32, qid: uint32, p: array[0..1, float], q: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathForHalfedge(d: Delaunator; eid: int32; pthproc: (var Path, int32, uint32,\n    uint32, array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; eid: int32; pid: uint32; qid: uint32;\n                 p: array[2, float]; q: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  closePath(pth)): Path	
pathsForHalfedgesAroundSite	pixienator.html#pathsForHalfedgesAroundSite,Delaunator,uint32,proc (pth: var Path, eid: int32, pid: uint32, qid: uint32, p: array[0..1, float], q: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathsForHalfedgesAroundSite(d: Delaunator; pid: uint32; pthproc: (var Path,\n    int32, uint32, uint32, array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; eid: int32; pid: uint32; qid: uint32;\n                 p: array[2, float]; q: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  closePath(pth)): seq[Path]	
pathForHull	pixienator.html#pathForHull,Delaunator,proc (pth: var Path, hid: uint32, eid: int32, pid: uint32, qid: uint32, p: array[0..1, float], q: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathForHull(d: Delaunator; pthproc: (var Path, uint32, int32, uint32, uint32,\n                                     array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; hid: uint32; eid: int32; pid: uint32;\n                 qid: uint32; p: array[2, float]; q: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  closePath(pth)): Path	
pathForTriangleSites	pixienator.html#pathForTriangleSites,Delaunator,uint32,proc (pth: var Path, tid: uint32, pid: uint32, qid: uint32, rid: uint32, p: array[0..1, float], q: array[0..1, float], r: array[0..1, float]){.gcsafe, locks: 0.}	pixienator: pathForTriangleSites(d: Delaunator; tid: uint32; pthproc: (var Path, uint32,\n    uint32, uint32, uint32, array[2, float], array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; tid: uint32; pid: uint32; qid: uint32;\n                 rid: uint32; p: array[2, float]; q: array[2, float];\n                 r: array[2, float]) =\n  circle(pth, float32(p[0]), float32(p[1]), triangleSiteRadius)\n  circle(pth, float32(q[0]), float32(q[1]), triangleSiteRadius)\n  circle(pth, float32(r[0]), float32(r[1]), triangleSiteRadius)): Path	
pathForTriangleEdges	pixienator.html#pathForTriangleEdges,Delaunator,proc (pth: var Path, tid: uint32, eid: int32, pid: uint32, qid: uint32, p: array[0..1, float], q: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathForTriangleEdges(d: Delaunator; pthproc: (var Path, uint32, int32, uint32,\n    uint32, array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; tid: uint32; eid: int32; pid: uint32;\n                 qid: uint32; p: array[2, float]; q: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  closePath(pth)): Path	
pathsForTriangles	pixienator.html#pathsForTriangles,Delaunator,proc (pth: var Path, tid: uint32, pid: uint32, qid: uint32, rid: uint32, p: array[0..1, float], q: array[0..1, float], r: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathsForTriangles(d: Delaunator; pthproc: (var Path, uint32, uint32, uint32,\n    uint32, array[2, float], array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; tid: uint32; pid: uint32; qid: uint32;\n                 rid: uint32; p: array[2, float]; q: array[2, float];\n                 r: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  lineTo(pth, float32(r[0]), float32(r[1]))\n  closePath(pth)): seq[Path]	
pathForTriangle	pixienator.html#pathForTriangle,Delaunator,uint32,proc (pth: var Path, tid: uint32, pid: uint32, qid: uint32, rid: uint32, p: array[0..1, float], q: array[0..1, float], r: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathForTriangle(d: Delaunator; tid: uint32; pthproc: (var Path, uint32, uint32,\n    uint32, uint32, array[2, float], array[2, float], array[2, float]) -&gt;\n    void = proc (pth: var Path; tid: uint32; pid: uint32; qid: uint32;\n                 rid: uint32; p: array[2, float]; q: array[2, float];\n                 r: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  lineTo(pth, float32(r[0]), float32(r[1]))\n  closePath(pth)): Path	
pathForRegionEdges	pixienator.html#pathForRegionEdges,Delaunator,proc (pth: var Path, eid: int32, p: array[0..1, float], q: array[0..1, float]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathForRegionEdges(d: Delaunator; pthproc: (var Path, int32, array[2, float],\n    array[2, float]) -&gt;\n    void = proc (pth: var Path; eid: int32; p: array[2, float];\n                 q: array[2, float]) =\n  moveTo(pth, float32(p[0]), float32(p[1]))\n  lineTo(pth, float32(q[0]), float32(q[1]))\n  closePath(pth)): Path	
pathsForRegions	pixienator.html#pathsForRegions,Delaunator,proc (pth: var Path, sid: uint32, verts: seq[array[0..1, float]]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathsForRegions(d: Delaunator; pthproc: (var Path, uint32, seq[array[2, float]]) -&gt;\n    void = proc (pth: var Path; sid: uint32; verts: seq[array[2, float]]) =\n  moveTo(pth, float32(verts[0][0]), float32(verts[0][1]))\n  for v in items(verts[1 .. BackwardsIndex(1)]):\n    lineTo(pth, float32(v[0]), float32(v[1]))\n  closePath(pth)): seq[Path]	
pathForRegion	pixienator.html#pathForRegion,Delaunator,uint32,proc (pth: var Path, sid: uint32, verts: seq[array[0..1, float]]){.noSideEffect, gcsafe, locks: 0.}	pixienator: pathForRegion(d: Delaunator; sid: uint32; pthproc: (var Path, uint32,\n    seq[array[2, float]]) -&gt;\n    void = proc (pth: var Path; sid: uint32; verts: seq[array[2, float]]) =\n  moveTo(pth, float32(verts[0][0]), float32(verts[0][1]))\n  for v in items(verts[1 .. BackwardsIndex(1)]):\n    lineTo(pth, float32(v[0]), float32(v[1]))\n  closePath(pth)): Path	
